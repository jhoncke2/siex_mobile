// Mocks generated by Mockito 5.2.0 from annotations
// in siex/test/features/budgets/presentation/budgets_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:siex/features/budgets/domain/budgets_failures.dart' as _i5;
import 'package:siex/features/budgets/domain/entities/budget.dart' as _i6;
import 'package:siex/features/budgets/domain/entities/cdps_group.dart' as _i9;
import 'package:siex/features/budgets/domain/entities/feature.dart' as _i11;
import 'package:siex/features/budgets/presentation/use_cases/get_budgets.dart'
    as _i3;
import 'package:siex/features/budgets/presentation/use_cases/get_cdps.dart'
    as _i8;
import 'package:siex/features/budgets/presentation/use_cases/update_budget.dart'
    as _i7;
import 'package:siex/features/budgets/presentation/use_cases/update_cdps.dart'
    as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [GetBudgets].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetBudgets extends _i1.Mock implements _i3.GetBudgets {
  MockGetBudgets() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.BudgetsFailure, List<_i6.Budget>>> call() =>
      (super.noSuchMethod(Invocation.method(#call, []),
          returnValue:
              Future<_i2.Either<_i5.BudgetsFailure, List<_i6.Budget>>>.value(
                  _FakeEither_0<_i5.BudgetsFailure, List<_i6.Budget>>())) as _i4
          .Future<_i2.Either<_i5.BudgetsFailure, List<_i6.Budget>>>);
}

/// A class which mocks [UpdateBudget].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateBudget extends _i1.Mock implements _i7.UpdateBudget {
  MockUpdateBudget() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.BudgetsFailure, void>> call(_i6.Budget? budget) =>
      (super.noSuchMethod(Invocation.method(#call, [budget]),
              returnValue: Future<_i2.Either<_i5.BudgetsFailure, void>>.value(
                  _FakeEither_0<_i5.BudgetsFailure, void>()))
          as _i4.Future<_i2.Either<_i5.BudgetsFailure, void>>);
}

/// A class which mocks [GetCdps].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCdps extends _i1.Mock implements _i8.GetCdps {
  MockGetCdps() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.BudgetsFailure, _i9.CdpsGroup>> call() =>
      (super.noSuchMethod(Invocation.method(#call, []),
              returnValue:
                  Future<_i2.Either<_i5.BudgetsFailure, _i9.CdpsGroup>>.value(
                      _FakeEither_0<_i5.BudgetsFailure, _i9.CdpsGroup>()))
          as _i4.Future<_i2.Either<_i5.BudgetsFailure, _i9.CdpsGroup>>);
}

/// A class which mocks [UpdateCdps].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateCdps extends _i1.Mock implements _i10.UpdateCdps {
  MockUpdateCdps() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.BudgetsFailure, void>> call(
          List<_i11.Feature>? cdps) =>
      (super.noSuchMethod(Invocation.method(#call, [cdps]),
              returnValue: Future<_i2.Either<_i5.BudgetsFailure, void>>.value(
                  _FakeEither_0<_i5.BudgetsFailure, void>()))
          as _i4.Future<_i2.Either<_i5.BudgetsFailure, void>>);
}
